
// type {{.InstanceType}} in package:{{.InstancePackageName}}
//
// id:{{.ComID}}
// class:{{.ComClass}}
// alias:{{.ComAlias}}
// scope:{{.ComScope}}
//
type {{.FactoryType}} struct {
}

func (inst* {{.FactoryType}}) register(cr application.ComponentRegistry) error {
	r := cr.NewRegistration()
	r.ID = "{{.ComID}}"
	r.Classes = "{{.ComClass}}"
	r.Aliases = "{{.ComAlias}}"
	r.Scope = "{{.ComScope}}"
	r.NewFunc = inst.new
	r.InjectFunc = inst.inject
	return r.Commit()
}

func (inst* {{.FactoryType}}) new() any {
    return &{{.InstanceType}}{}
}

func (inst* {{.FactoryType}}) inject(injext application.InjectionExt, instance any) error {
	ie := injext
	com := instance.(*{{.InstanceType}})
	nop(ie, com)

	{{.InjectFieldList}}

    return nil
}

{{.InjectFieldGetters}}
